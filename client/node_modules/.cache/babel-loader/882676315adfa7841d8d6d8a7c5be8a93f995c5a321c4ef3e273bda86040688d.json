{"ast":null,"code":"var _jsxFileName = \"/Users/dino/Desktop/Dev/discord-integrations-development/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { createBrowserRouter, RouterProvider, redirect } from \"react-router-dom\";\nimport ErrorPage from './error-page';\nimport Home from './components/Home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 19\n  }, this),\n  children: [{\n    // Redirect user to the homepage if they go to the base url\n    path: \"\",\n    loader: () => {\n      return redirect(\"/home\");\n    }\n  }, {\n    path: \"home\",\n    element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 18\n    }, this)\n    // Check if the user has a JWT token in localStorage\n  }]\n}]);\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","createBrowserRouter","RouterProvider","redirect","ErrorPage","Home","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","loader","root","createRoot","document","getElementById","render","StrictMode"],"sources":["/Users/dino/Desktop/Dev/discord-integrations-development/client/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { createBrowserRouter, RouterProvider, redirect } from \"react-router-dom\";\nimport ErrorPage from './error-page';\nimport Home from './components/Home';\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <App />,\n    errorElement: <ErrorPage />,\n    children: [\n      {\n        // Redirect user to the homepage if they go to the base url\n        path: \"\",\n        loader: () => {\n          return redirect(\"/home\")\n        }\n      },\n      {\n        path: \"home\",\n        element: <Home />,\n        // Check if the user has a JWT token in localStorage\n\n      }\n    ],\n},\n])\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <React.StrictMode>\n    <RouterProvider router={router}/>\n  </React.StrictMode>\n);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,mBAAmB,EAAEC,cAAc,EAAEC,QAAQ,QAAQ,kBAAkB;AAChF,OAAOC,SAAS,MAAM,cAAc;AACpC,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,MAAM,GAAGP,mBAAmB,CAAC,CACjC;EACEQ,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEH,OAAA,CAACP,GAAG;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAChBC,YAAY,eAAER,OAAA,CAACH,SAAS;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAC3BE,QAAQ,EAAE,CACR;IACE;IACAP,IAAI,EAAE,EAAE;IACRQ,MAAM,EAAEA,CAAA,KAAM;MACZ,OAAOd,QAAQ,CAAC,OAAO,CAAC;IAC1B;EACF,CAAC,EACD;IACEM,IAAI,EAAE,MAAM;IACZC,OAAO,eAAEH,OAAA,CAACF,IAAI;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;IAChB;EAEF,CAAC;AAEP,CAAC,CACA,CAAC;;AACF,MAAMI,IAAI,GAAGnB,QAAQ,CAACoB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAEjEH,IAAI,CAACI,MAAM,eACTf,OAAA,CAACT,KAAK,CAACyB,UAAU;EAAAP,QAAA,eACfT,OAAA,CAACL,cAAc;IAACM,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACjB,CACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}